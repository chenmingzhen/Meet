apply plugin: 'com.android.application'

android {

    //调试  加快Gradle速度  发布版本时去掉
    if (rootProject.hasProperty("devBuild")) {
        splits.abi.enable = false
        splits.density.enable = false
        //禁用PNG压缩
        aaptOptions.cruncherEnabled = false
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //调试 只编译res下的这些文件
        resConfigs("xxhdpi")
    }
    buildTypes {
        //定义Gradle常量
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            //转义字符
            buildConfigField("String", "LOG_TAG", "\"Meet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")

        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            //转义字符
            buildConfigField("String", "LOG_TAG", "\"Meet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //引用FrameWork依赖
    implementation project(path: ':framework')
}
